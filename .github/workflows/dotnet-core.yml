name: .NET Core

on:
  [push]

env:
  MSSQL_SA_PASSWORD: "YourStrong!Passw0rd"
  ACCEPT_EULA: "Y"
  MSSQL_PID: "developer"
  
jobs:  
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: pgpass4291
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
        cache: 'maven'
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
    - name: Start MySQL
      run: |
        sed -i'' -e 's/Password=;/Password=pgpass4291;/' Tests/IsIdentifiableTests/TestDatabases.xml
        sed -i'' -e 's/Uid=root;Pwd=;/Uid=root;Pwd=root;AllowPublicKeyRetrieval=True;/' Tests/IsIdentifiableTests/TestDatabases.xml
        sudo mkdir -p /var/run/mysqld
        sudo chown mysql:mysql /var/run/mysqld
        sudo mysqld_safe --port=3306 --skip-grant-tables --skip-name-resolve &
        tail /var/log/mysql/error.log
    - name: Install MS SQL Server
      run: |
        wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/18.04/mssql-server-2019.list)"
        sudo apt-get install -y --no-install-recommends postgresql mssql-tools mssql-server
        sudo -E /opt/mssql/bin/mssql-conf -n setup accept-eula
    - name: Fetch tessdata
      run: |
        bash data/tessdata/download.sh
        mv eng.traineddata ./data/tessdata/eng.traineddata
    - name: Build
      run: dotnet build --configuration Release --nologo
    - name: Test
      run: dotnet test --blame -l:"console;verbosity=normal" --nologo
    - name: Build Java NERD
      run: |
        cd nlp/uk.ac.dundee.hic.nerd
        mvn -B -q clean compile assembly:single
        java -jar target/nerd-0.0.1-SNAPSHOT.jar &
        timeout 30 sh -c 'until nc -z 127.0.0.1 1881; do sleep 1; done'
        printf "University of Dundee\0Fred Bloggs\0Ninewells Hospital\0person\0woman\0man\0camera\0tv\0" | nc -N 127.0.0.1 1881
        kill $!
        mv target/nerd-0.0.1-SNAPSHOT.jar ../../release/
    - name: Package ii binary
      run: |
        dotnet publish ii/ii.csproj -nologo --runtime win-x64 -c Release --self-contained true -o win-x64 -p:PublishSingleFile=true -p:GenerateDocumentationFile=false -p:DebugType=embedded
        dotnet publish ii/ii.csproj -nologo --runtime linux-x64 -c Release --self-contained true -o linux-x64 -p:PublishSingleFile=true -p:GenerateDocumentationFile=false -p:DebugType=embedded
        (cd win-x64 && zip -9r ../ii-cli-win-x64.zip .)
        (tar -zcvf ii-cli-linux-x64.tar.gz ./linux-x64)
    - name: Pack
      run: dotnet pack IsIdentifiable/IsIdentifiable.csproj -c Release  -p:PackageVersion=$(fgrep AssemblyVersion SharedAssemblyInfo.cs|cut -d'"' -f2) --nologo --include-source -o .
    - name: Package RDMP Plugin
      run: |
        cd IsIdentifiablePlugin
        dotnet publish --self-contained false
        nuget pack ./IsIdentifiablePlugin.nuspec -Properties Configuration=Debug -IncludeReferencedProjects -Symbols -Version $(grep AssemblyInformationalVersion ../SharedAssemblyInfo.cs | cut -d'"' -f2)
        cp ./IsIdentifiablePlugin.$(grep AssemblyInformationalVersion ../SharedAssemblyInfo.cs | cut -d'"' -f2).nupkg ../release/IsIdentifiablePlugin.$(grep AssemblyInformationalVersion ../SharedAssemblyInfo.cs | cut -d'"' -f2).nupkg
        cd ..
    - name: Nuget push
      if: contains(github.ref,'refs/tags/')
      run: dotnet nuget push *.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_KEY }} --skip-duplicate
    - name: Store created nupkg files
      uses: actions/upload-artifact@v3
      with:
        path: '*.nupkg'
        retention-days: 1
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@2.2.1
      if: contains(github.ref, 'refs/tags/v')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
